; https://www.youtube.com/watch?v=VxpCgQyUXlI
[merge]
    ; https://stackoverflow.com/questions/27417656/should-diff3-be-default-conflictstyle-on-git
    conflictstyle = diff3
    tool = gvimdiff3
; https://stackoverflow.com/questions/1251681/git-mergetool-generates-unwanted-orig-files
[mergetool]
	keepBackup = false
; http://vimdoc.sourceforge.net/htmldoc/diff.html
[mergetool "gvimdiff3"]
    trustExitCode = false
    cmd = gvim -f -d -M -c 'set diffopt=internal,filler,closeoff,algorithm:patience,iwhiteall | :set modifiable | :set write | :wincmd J' $MERGED $LOCAL $BASE $REMOTE
[alias]
    ; cp = cherry-pick
    ; cl = clone
    ; try using switch instead
    ; co = checkout
    c = commit
    ca = commit --all
    b = branch --show-current
    ba = branch -vv --all
    ds = diff --staged
    ; https://stackoverflow.com/questions/29810331/is-there-a-quick-way-to-git-diff-from-the-point-or-branch-origin
    dg = !"git diff $(git merge-base origin/master HEAD)"
    l = log --graph --oneline --decorate
    la = log --graph --oneline --decorate --all
    ; This for following renames to a single file.
    ; https://stackoverflow.com/a/4434056/1364288
    lf = log --graph --oneline --decorate --summary --follow 
    laf = log --graph --oneline --decorate --summary --all --follow 
    s = status -s -b
    st = status -s -b --untracked-files=no
    at = add --update
    atz = !"git add -- $(git ls-files --modified | fzf --multi)"
    az = !"git add -- $(git ls-files --others | fzf --multi)"
    u = diff --name-only --diff-filter=U
    m = merge-base origin/master HEAD
    mt = mergetool
    dt = difftool
    rz = !"git restore -- $(git ls-files -m | fzf --multi)" 
    g = !"git rebase --interactive $(git merge-base origin/master HEAD)"


